name: Development Build

on:
  push:
    branches: [ main, fedora-conversion ]
  workflow_dispatch:
    inputs:
      create_artifacts:
        description: 'Create build artifacts'
        required: false
        default: 'true'
        type: boolean

jobs:
  dev-build:
    runs-on: ubuntu-latest
    container:
      image: fedora:42
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install build dependencies
      run: |
        dnf update -y
        dnf install -y rpm-build rpmdevtools meson ninja-build git \
                       python3-devel python3-setuptools \
                       glib2-devel bc bash wget findutils
        
    - name: Set up build environment
      run: |
        rpmdev-setuptree
        
    - name: Extract version and build info
      id: build_info
      run: |
        VERSION=$(grep "Version:" pulseaudio-equalizer-ladspa.spec | awk '{print $2}' | tr -d ' ')
        COMMIT_SHA=${GITHUB_SHA::8}
        BUILD_DATE=$(date +%Y%m%d)
        DEV_VERSION="${VERSION}.dev${BUILD_DATE}.${COMMIT_SHA}"
        
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_OUTPUT
        echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_OUTPUT
        echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_OUTPUT
        
        echo "ðŸ”¨ Building development version: $DEV_VERSION"
        
    - name: Create development spec file
      run: |
        # Create a development version of the spec file
        cp pulseaudio-equalizer-ladspa.spec dev-pulseaudio-equalizer-ladspa.spec
        
        # Update version for development build
        sed -i "s/^Release:.*$/Release:        0.dev${{ steps.build_info.outputs.BUILD_DATE }}.git${{ steps.build_info.outputs.COMMIT_SHA }}%{?dist}/" dev-pulseaudio-equalizer-ladspa.spec
        
        # Add development note to summary
        sed -i 's/^Summary:.*$/& (Development Build)/' dev-pulseaudio-equalizer-ladspa.spec
        
        echo "=== Development Spec File ==="
        head -20 dev-pulseaudio-equalizer-ladspa.spec
        
    - name: Download source
      run: |
        cd /github/home/rpmbuild/SOURCES/
        # Use the actual upstream version (3.0.2) but save as our package version
        wget "https://github.com/pulseaudio-equalizer-ladspa/equalizer/archive/v3.0.2.tar.gz" \
             -O "pulseaudio-equalizer-ladspa-${{ steps.build_info.outputs.VERSION }}.tar.gz"
        
    - name: Build development RPM
      run: |
        cp dev-pulseaudio-equalizer-ladspa.spec /github/home/rpmbuild/SPECS/
        dnf builddep -y /github/home/rpmbuild/SPECS/dev-pulseaudio-equalizer-ladspa.spec
        
        cd /github/home/rpmbuild/SPECS/
        rpmbuild -ba dev-pulseaudio-equalizer-ladspa.spec
        
    - name: Create artifact directory
      if: github.event.inputs.create_artifacts != 'false'
      run: |
        mkdir -p /github/workspace/dev-rpms
        cp /github/home/rpmbuild/RPMS/noarch/*.rpm /github/workspace/dev-rpms/ 2>/dev/null || true
        cp /github/home/rpmbuild/SRPMS/*.rpm /github/workspace/dev-rpms/ 2>/dev/null || true
        
        echo "=== Development Build Results ==="
        ls -la /github/workspace/dev-rpms/
        
    - name: Upload development artifacts
      if: github.event.inputs.create_artifacts != 'false'
      uses: actions/upload-artifact@v4
      with:
        name: dev-rpm-${{ steps.build_info.outputs.BUILD_DATE }}-${{ steps.build_info.outputs.COMMIT_SHA }}
        path: dev-rpms/*.rpm
        retention-days: 7
        
    - name: Build summary
      run: |
        echo "## ðŸ”¨ Development Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ steps.build_info.outputs.COMMIT_SHA }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Base Version**: ${{ steps.build_info.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Dev Version**: ${{ steps.build_info.outputs.DEV_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date**: ${{ steps.build_info.outputs.BUILD_DATE }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ -d "/github/workspace/dev-rpms" ]]; then
          echo "### ðŸ“¦ Built Packages" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -la /github/workspace/dev-rpms/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Quick test
      run: |
        echo "=== Quick Installation Test ==="
        dnf install -y bash bc glib2 gtk3 python3 python3-gobject || true
        
        cd /github/home/rpmbuild/RPMS/noarch/
        for rpm in *.rpm; do
          echo "Testing package: $rpm"
          rpm -qpi "$rpm"
          echo "Package contents (first 10 files):"
          rpm -qpl "$rpm" | head -10
          echo ""
        done
